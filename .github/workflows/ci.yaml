---
name: CI
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_BASE_NAME: ${{ github.repository }}
  PACKAGE_VERSION: 0.0.2
  package_name: CLib
  package_arch_list: linux-amd64  # Comma separated list.
  build_dir: null  # Disables package generation (code only repo).
  test_make_target: test

jobs:
  configure:
    runs-on: [ubuntu-latest]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set Matrix
        id: set-matrix
        run: |
          ARCH_JSON=$(echo '"${{ env.package_arch_list }}"' | jq -cM 'split(",") | map({"arch": .})')
          echo "::set-output name=matrix::$ARCH_JSON"

  build:
    runs-on: [ubuntu-latest]
    needs: [configure]
    strategy:
      matrix:
        package:
          - ${{ fromJson(needs.configure.outputs.matrix) }}
    container:
      image: ghcr.io/boschglobal/dse.clib-gcc-builder:main
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build package metadata
        id: package_meta
        uses: docker/metadata-action@v4
        with:
          images: dse/clib
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Get package version
        if: startsWith(github.ref, 'refs/tags/')
        id: package
        run: |
          echo "PACKAGE_VERSION=${{ fromJSON(steps.package_meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_ENV

      - name: Build
        env:
          PACKAGE_ARCH: ${{ matrix.package.arch }}
        run: |
          make

      - name: Test
        if: ${{ env.test_make_target != '' }}
        env:
          PACKAGE_ARCH: ${{ matrix.package.arch }}
        run: |
          make ${{ env.test_make_target }}
